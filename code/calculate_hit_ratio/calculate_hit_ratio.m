function [elephant, mice] = calculate_hit_ratio(strategy)
    data_hits = [0.016927719116210938, 0.016927719116210938, 0.016927719116210938, 0.0171661376953125, 0.017881393432617188, 0.01811981201171875, 0.01811981201171875, 0.018835067749023438, 0.018835067749023438, 0.019073486328125, 0.019073486328125, 0.019788742065429688, 0.019788742065429688, 0.02002716064453125, 0.02002716064453125, 0.02002716064453125, 0.02002716064453125, 0.02002716064453125, 0.02002716064453125, 0.02002716064453125, 0.02002716064453125, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.0209808349609375, 0.021219253540039062, 0.021219253540039062, 0.021219253540039062, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.02193450927734375, 0.022172927856445312, 0.022172927856445312, 0.022172927856445312, 0.022172927856445312, 0.022172927856445312, 0.022172927856445312, 0.022172927856445312, 0.022172927856445312, 0.02288818359375, 0.02288818359375, 0.02288818359375, 0.02288818359375, 0.02288818359375, 0.02288818359375, 0.02288818359375, 0.02288818359375, 0.02288818359375, 0.02288818359375, 0.023126602172851562, 0.023126602172851562, 0.023126602172851562, 0.023126602172851562, 0.023126602172851562, 0.023126602172851562, 0.023126602172851562, 0.023126602172851562, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.02384185791015625, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.024080276489257812, 0.0247955322265625, 0.0247955322265625, 0.0247955322265625, 0.0247955322265625, 0.0247955322265625, 0.0247955322265625, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025033950805664062, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.025987625122070312, 0.026226043701171875, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.026941299438476562, 0.027179718017578125, 0.027179718017578125, 0.027179718017578125, 0.027179718017578125, 0.027179718017578125, 0.027179718017578125, 0.027179718017578125, 0.027179718017578125, 0.027894973754882812, 0.027894973754882812, 0.027894973754882812, 0.027894973754882812, 0.027894973754882812, 0.027894973754882812, 0.027894973754882812, 0.027894973754882812, 0.027894973754882812, 0.028133392333984375, 0.028133392333984375, 0.028133392333984375, 0.028848648071289062, 0.028848648071289062, 0.028848648071289062, 0.029087066650390625, 0.030040740966796875, 0.030994415283203125, 0.031948089599609375, 0.04601478576660156];
    data_misses = [0.3998279571533203, 0.5769729614257812, 0.5857944488525391, 0.5869865417480469, 0.6008148193359375, 0.6060600280761719, 0.6270408630371094, 0.6339550018310547, 0.659942626953125, 0.6868839263916016, 0.6918907165527344, 0.7009506225585938, 0.7791519165039062, 0.7870197296142578, 0.80108642578125, 0.8068084716796875, 0.8320808410644531, 0.84686279296875, 0.8540153503417969, 0.8602142333984375, 0.8859634399414062, 0.8940696716308594, 0.9779930114746094, 1.0290145874023438, 1.0428428649902344, 1.0690689086914062, 1.0797977447509766, 1.1501312255859375, 1.1768341064453125, 1.1889934539794922, 1.45721435546875, 1.4688968658447266, 1.5339851379394531, 1.7249584197998047];

    max_hit = max(data_hits);
    min_miss = min(data_misses);
    threshold = (min_miss + max_hit) / 2;

    % [h_x, h_y] = empirical_cdf(data_hits);
    % [m_x, m_y] = empirical_cdf(data_misses);
    % figure(1)
    % plot(h_x, h_y, 'LineWidth', 1.5, 'DisplayName','Delay of sure hits'), xlabel('Delay (ms)'), ylabel('Probabilty'), title('Empirical CDF for Hits and Misses')
    % set(gca,'XTick',(0:0.1:30))
    % hold on
    % plot(m_x, m_y, 'LineWidth', 1.5, 'DisplayName','Delay of sure misses')
    % legend('Delay of sure hits','Delay of sure misses')
    % hold off

    [h_x, h_y] = empirical_cdf(data_hits);
    [m_x, m_y] = empirical_cdf(data_misses);
    figure(1)
    plot(h_x, h_y, 'LineWidth', 1.5, 'DisplayName','Delay of sure hits'), xlabel('delay (ms)'), ylabel('CDF')
    set(gca,'XTick',(0:0.1:30))
    hold on
    plot(m_x, m_y, 'LineWidth', 1.5, 'DisplayName','Delay of sure misses')
    legend('Delay of sure hits','Delay of sure misses')
    hold off

    elephant = [];
    for i = 1:9
       filename = "randomization_logs/" + strategy + "/elephant/log_" + i + "_1.txt";
       elephant_data = readmatrix(filename);
       hit_ratio = calc_hit_ratio(elephant_data, threshold);
       elephant = [elephant, hit_ratio];
    end

    mice = [];
    for i = 1:9
       filename = "randomization_logs/" + strategy + "/mice/log_" + i + "_1.txt";
       mice_data = readmatrix(filename);
       hit_ratio = calc_hit_ratio(mice_data, threshold);
       mice = [mice, hit_ratio];
    end
    
    function hit_ratio = calc_hit_ratio (data, threshold)
        hits = 0;
        for i=1:length(data)
            if data(i) <= threshold
                hits = hits+1;
            end
            %hits
            hit_ratio = hits / length(data);
        end
    end

    function [ x,f ] = empirical_cdf( data )
        % f(x) is the staircase empirical CDF based on 'data'
        x = sort(data);
        f = ([1:length(data)]./length(data));
    end

end

%%%%%%%%%%%%%%%% FIFO %%%%%%%%%%%%%%%%%%
%lambda_a = 1    :[0.9120, 0.8403, 0.9806, 0.9699, 0.9623, 0.9061, 0.9248, 0.9272, 0.8849]
%lambda_a = 0.167:[0.7706, 0.6529, 0.8876, 0.8863, 0.8525, 0.6925, 0.8007, 0.7966, 0.7359]
%lambda_a = 0.001:[0.7526, 0.6288, 0.8753, 0.8783, 0.8358, 0.6651, 0.7832, 0.7859, 0.7173]
%%%%%%%%%%%%%%%% Q-LRU %%%%%%%%%%%%%%%%%%
%lambda_a = 1    :[0.8314, 0.5921, 0.9357, 0.8888, 0.8718, 0.7203, 0.7822, 0.7815, 0.7169]
%lambda_a = 0.167:[0.8299, 0.6028, 0.9362, 0.8924, 0.8721, 0.7057, 0.7893, 0.7878, 0.7343]
%lambda_a = 0.001:[0.8289, 0.6130, 0.9424, 0.8885, 0.8767, 0.7209, 0.7949, 0.7980, 0.7239]
%%%%%%%%%%%%%%%% LRU %%%%%%%%%%%%%%%%%%%
%lambda_a = 1:    [0.9158, 0.8314, 0.9802, 0.9809, 0.9604, 0.8925, 0.9230, 0.9235, 0.8893]
%                 [0.9142, 0.8435, 0.9788, 0.9665, 0.9624, 0.9051, 0.9212, 0.9274, 0.8870] 
%lambda_a = 0.167:[0.8357, 0.6984, 0.6956, 0.9217, 0.8932, 0.7670, 0.8560, 0.8358, 0.8033]
%lambda_a = 0.001: [0.8175, 0.6601, 0.9266, 0.9078, 0.8759, 0.7272, 0.8376, 0.8092, 0.7766]
%                  [0.8074, 0.6524, 0.9297, 0.9008, 0.8560, 0.7245, 0.8349, 0.8020, 0.7680] 
